{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./src/pages/chart.vue?1a5d","webpack:///src/pages/chart.vue","webpack:///./src/pages/chart.vue?4ca6","webpack:///./src/pages/chart.vue","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./src/pages/chart.vue?e20a","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js"],"names":["zrUtil","__webpack_require__","_symbol","createSymbol","graphic","_number","parsePercent","_labelHelper","getDefaultLabel","SymbolClz","data","idx","seriesScope","Group","call","this","updateData","symbolProto","prototype","getSymbolSize","symbolSize","getItemVisual","Array","slice","getScale","driftSymbol","dx","dy","parent","drift","_createSymbol","symbolType","keepAspect","removeAll","color","symbolPath","attr","z2","culling","scale","_symbolType","add","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","silent","seriesModel","hostModel","isInit","updateProps","_updateCommon","fadeIn","target","style","opacity","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","onMouseOver","isInEmphasis","onEmphasis","onMouseOut","onNormal","incremental","useHoverLayer","__symbolOriginalScale","ratio","animateTo","Math","max","type","useStyle","strokeNoScale","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","labelModel","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","itemModel","getItemModel","getModel","getItemStyle","getShallow","extend","elStyle","PI","setColor","symbolInnerColor","setStyle","liftZ","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","opt","getName","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","on","fadeOut","cb","keepLabel","text","dataIndex","inherits","_default","module","exports","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","render","radiusAxisModel","ecModel","group","get","radiusAxis","axis","polar","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","getExtent","radiusExtent","layout","layoutAxis","axisBuilder","each","getGroup","name","isBlank","_splitLine","splitLineModel","lineStyleModel","lineColors","lineCount","splitLines","i","length","colorIndex","push","Circle","shape","cx","cy","r","coord","mergePath","defaults","stroke","fill","getLineStyle","_splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","getAreaStyle","position","rotation","labelDirection","tickDirection","nameDirection","labelRotate","ChartView","updateDataSelected","uid","hasAnimation","api","getData","selectedOffset","dispatchAction","from","seriesId","id","toggleItemSelected","getItemGraphicEl","getItemLayout","isSelected","el","midAngle","cos","sin","offset","animate","when","start","PiePiece","sector","polyline","Polyline","Text","ignore","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","label","setShape","animationType","visualColor","lineJoin","_updateLabel","labelLine","labelText","labelLayout","points","linePoints","x","y","origin","labelHoverModel","labelLineModel","labelLineHoverModel","useInsideStyle","inside","textAlign","textVerticalAlign","verticalAlign","smooth","PieView","init","sectorGroup","_sectorGroup","payload","oldData","_data","isFirstRender","onSectorClick","curry","selectedMode","diff","piePiece","eachChild","child","setItemGraphicEl","update","newIdx","oldIdx","remove","execute","count","getWidth","getHeight","removeClipPath","bind","setClipPath","_createClipPath","clockwise","dispose","clipPath","containPoint","point","itemLayout","radius","sqrt","_config","__DEV__","Polar","_axisHelper","createScaleByModel","niceScaleExtent","CoordinateSystem","_dataStackHelper","getStackedDimension","resizePolar","polarModel","center","width","height","getRadiusAxis","size","min","inverse","setExtent","updatePolarScale","Infinity","eachSeries","coordinateSystem","mapDimension","dim","unionExtentFromData","model","onBand","extent","setAxis","axisModel","mainType","polarCreator","dimensions","create","polarList","eachComponent","findAxisModel","angleAxisModel","queryComponents","index","register","isDimensionStacked","getSeriesStackId","seriesIndex","getAxisKey","barLayoutPolar","seriesType","lastStackCoords","barWidthAndOffset","calRadialBar","filter","getSeriesByType","isSeriesFiltered","eachSeriesByType","baseAxis","getBaseAxis","stackId","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","barMinHeight","barMinAngle","valueDim","baseDim","stacked","valueAxisStart","len","value","baseValue","isNaN","sign","baseCoord","p","n","radiusSpan","dataToRadius","angle","dataToAngle","abs","angleSpan","setItemLayout","barSeries","columnsMap","axisExtent","bandWidth","getBandWidth","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","gap","stacks","maxWidth","barWidth","barMaxWidth","barGap","barCategoryGap","result","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","createListFromArray","SeriesModel","dependencies","getInitialData","option","getSource","defaultOption","legendHoverLink","clipOverflow","lineStyle","step","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","animationEasing","progressive","hoverLayerThreshold","linearMap","PI2","RADIAN","isArray","minAngle","validDataCount","sum","getSum","unitRadian","roseType","stillShowZeroSum","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","NaN","echarts","barPolar","registerLayout","extendComponentView","legendSelectActionHandler","methodName","selectedMap","isToggleSelect","legendModel","legendData","isItemSelected","hasOwnProperty","selected","registerAction","_listComponent","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","_isFirstRender","getContentGroup","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","createHashMap","selectMode","excludeSeriesId","eachRawSeries","getSeriesByName","getVisual","getDataParams","legendSymbolType","itemGroup","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","legendDataProvider","indexOfName","newline","itemWidth","itemHeight","inactiveColor","symbolKeepAspect","textStyleModel","itemIcon","tooltipModel","legendGlobalTooltipModel","parentModel","textX","formatter","content","replace","setTextStyle","textFill","getTextColor","hitRect","Rect","getBoundingRect","invisible","tooltip","formatterParams","componentType","legendIndex","componentIndex","$vars","__legendDataIndex","box","contentRect","seriesName","dataName","getZr","storage","getDisplayList","_layout","extendComponentModel","layoutMode","ignoreSize","show","subtext","subtarget","left","top","backgroundColor","borderColor","borderWidth","itemGap","textStyle","fontSize","fontWeight","subtextStyle","titleModel","subtextStyleModel","textBaseline","textEl","disableBox","textRect","subText","subTextEl","link","sublink","triggerEvent","window","open","eventData","groupRect","layoutOption","alignStyle","margin","rect","subPixelOptimizeRect","formatUtil","BaseAxisPointer","viewHelper","matrix","PolarAxisPointer","makeElOption","elOption","axisPointerModel","animationThreshold","coordValue","otherAxis","otherExtent","capitalFirst","axisPointerType","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","labelMargin","labelPos","getLabelPosition","buildLabelElOption","dataToCoord","align","transform","rotate","translate","applyTransform","labelRotation","innerTextLayout","coordToPoint","line","makeLineShape","shadow","radian","makeSectorShape","registerAxisPointerClass","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","select","unSelect","toggleSelected","_vm","_h","$createElement","_c","_self","staticClass","_m","attrs","options","polar1","polar2","polar3","polar4","staticRenderFns","_v","chartvue_type_script_lang_js_","components","v-chart","ECharts","t","work_no","email","username","master_dirs","resource_id","resource_name","hava_infot","userLoading","bodySize","title","grid","xAxis","yAxis","series","normal","emphasis","shadowBlur","shadowOffsetX","shadowColor","legend","orient","bottom","mounted","document","body","clientHeight","clientWidth","methods","updatePublicMsg","console","log","goMasterDirs","goUserDirs","pages_chartvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","actionInfos","actionInfo","subType","query","method","axisType","foundAxisModel","getCoordSysModel","layoutBox","positionElement","componentModel","boxLayoutParams","normalizeCssArray","defaultSymbolType","legendSymbol","performRawSeries","reset","setVisual","hasCallback","dataEach","rawValue","getRawValue","params","setItemVisual","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_style_index_0_id_389949a0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_style_index_0_id_389949a0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Model","_model","isNameSpecified","LegendModel","mergeDefaultAndTheme","mergeOption","superCall","optionUpdated","_updateData","hasSelected","potentialData","availableNames","isPotential","names","mapArray","concat","_availableNames","rawData","map","dataItem","indexOf","borderRadius","_util","createRenderPlanner","plan","coordSys","pipelineContext","isLargeRender","large","dims","dimLen","stackResultDim","getCalculationInfo","progress","segCount","end","Float32Array","tmpIn","tmpOut","dataToPoint","setLayout","legendModels","findComponents","filterSeries","Axis","RadiusAxis","constructor","pointToData","clamp","radiusToData","coordToData","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","getRawData","idxMap","rawIdx","getRawIndex","filteredIdx","singleDataColor","getColorFromPalette","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDataOffset","coordDim","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","textContain","makeInner","inner","AngleAxis","angleExtent","angleToData","calculateCategoryInterval","getLabelModel","ordinalScale","ordinalExtent","tickCount","tickValue","unitSpan","unitH","getFont","maxH","dh","interval","floor","cache","lastAutoInterval","lastTickCount","elementList","getAxisLineShape","rExtent","reverse","x1","y1","x2","y2","getRadiusIdx","fixAngleOverlap","list","firstItem","lastItem","pop","ticksAngles","labels","getViewLabels","labelItem","clone","_axisLine","circle","_axisTick","tickModel","tickLen","lines","tickAngleItem","Line","_axisLabel","rawCategoryData","getCategories","commonLabelModel","labelTextAlign","labelTextVerticalAlign","formattedLabel","prevAngle","r1","adjustSingleSide","viewWidth","viewHeight","shiftDown","delta","j","shiftUp","changeX","isDownList","lastDeltaX","Number","MAX_VALUE","l","deltaY","length2","len2","deltaX","sort","a","b","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","isPositionCenter","dist","hasLabelRotate","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x3","y3","font","getFormattedLabel","createDataSelectAction","dataColor","pieLayout","dataFilter","event","registerVisual","registerProcessor","legendFilter","Component","registerSubTypeDefaulter","filterSelf","Path","vec2","fixClipWithShadow","vec2Min","vec2Max","scaleAndAdd","v2Copy","copy","v","cp0","cp1","isPointNull","drawSegment","ctx","segLen","allLen","smoothMin","smoothMax","drawMono","apply","arguments","drawNonMono","prevIdx","k","prevP","ctrlLen","bezierCurveTo","lineTo","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","sub","getBoundingBox","smoothConstraint","ptMin","ptMax","pt","brush","buildPath","Polygon","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","ComponentModel","axisModelCreator","axisModelCommonMixin","PolarAxisModel","polarIndex","polarId","merge","polarAxisDefaultExtendedOption","splitNumber","axisLabel","getAxisType","axisDim","createDimensions","List","nameList","coordDimensions","source","dimensionsInfo","initData","visualSymbol","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","_helper","diffData","newData","diffResult","cmd","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","status","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","next","stackedOnCurrent","stackedOnNext","SymbolDraw","lineAnimationDiff","modelUtil","_poly","round","isPointsSame","points1","points2","p1","p2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getStackedOnPoints","createGridClipShape","cartesian","forSymbol","xExtent","getAxis","yExtent","isHorizontal","lineWidth","expandSize","createPolarClipShape","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","dimIndex","dimension","dimName","dimInfo","getDimensionInfo","colorStops","stops","stop","toGlobalCoord","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","LinearGradient","getIsIgnoreFunc","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","labelMap","availSize","dataLen","lineGroup","symbolDraw","_symbolDraw","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","polygon","_polygon","isAreaChart","isEmpty","isIgnoreFunc","eachItemGraphicEl","__temp","_step","_newPolygon","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","stackedOnSeries","_valueOrigin","queryDataIndex","__points","updatedDataInfo","diffStatus","ptIdx","animators","during","isObject","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","contain","normalizeUpdateOpt","makeSeriesScope","SymbolCtor","symbolEl","isPersistent","updateLayout","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","traverse","enableAnimation","createListSimply","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","superApply","_createSelectableList","_defaultLabelLine","newOption","valueList","percent","defaultEmphasis","labelLineNormalOpt","labelLineEmphasisOpt","hoverOffset","avoidLabelOverlap","percentPrecision","mixin","_radiusAxis","_angleAxis","axisPointerEnabled","pointToCoord","containData","getAxes","scaleType","axes","getTooltipAxes","baseAxes","otherAxes","maxAngle","atan2","samplers","average","frame","isFinite","nearest","indexSampler","modifyOutputEnd","sampler","rate","setData","downSample"],"mappings":"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","file":"js/chunk-22b1c344.79000b34.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    // Note: consider `off`, should use static function here.\n    symbolPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n\nfunction onMouseOver() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onEmphasis.call(this);\n}\n\nfunction onMouseOut() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onNormal.call(this);\n}\n\nfunction onEmphasis() {\n  // Do not support this hover animation util some scenario required.\n  // Animation can only be supported in hover layer when using `el.incremetal`.\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  var scale = this.__symbolOriginalScale;\n  var ratio = scale[1] / scale[0];\n  this.animateTo({\n    scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n  }, 400, 'elasticOut');\n}\n\nfunction onNormal() {\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  this.animateTo({\n    scale: this.__symbolOriginalScale\n  }, 400, 'elasticOut');\n}\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  // FIXME\n  // Revert becuase it brings bar progressive bug.\n  // The complete fix will be added in the next version.\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var cx = seriesModel.coordinateSystem.cx;\n    var cy = seriesModel.coordinateSystem.cy;\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  },\n\n  /**\n   * @protected\n   */\n  remove: function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"all-chart\",style:(_vm.bodySize)},[_vm._m(0),_c('div',{staticClass:\"right-chart\"},[_c('div',{staticClass:\"one-chart\"},[_c('v-chart',{attrs:{\"options\":_vm.polar1}})],1),_c('div',{staticClass:\"one-chart\"},[_c('v-chart',{attrs:{\"options\":_vm.polar2}})],1),_c('div',{staticClass:\"one-chart\"},[_c('v-chart',{attrs:{\"options\":_vm.polar3}})],1),_c('div',{staticClass:\"one-chart\"},[_c('v-chart',{attrs:{\"options\":_vm.polar4}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"left-chart\"},[_c('div',{staticClass:\"one-numbers\"},[_c('div',{staticClass:\"shahu-num\"},[_vm._v(\"200\")]),_c('div',{staticClass:\"shahu-msg\"},[_vm._v(\"珊瑚图片总数\")])]),_c('div',{staticClass:\"one-numbers\"},[_c('div',{staticClass:\"shahu-num\"},[_vm._v(\"60\")]),_c('div',{staticClass:\"shahu-msg\"},[_vm._v(\"珊瑚档案数量\")])]),_c('div',{staticClass:\"one-numbers\"},[_c('div',{staticClass:\"shahu-num\"},[_vm._v(\"32\")]),_c('div',{staticClass:\"shahu-msg\"},[_vm._v(\"暂养次数\")])]),_c('div',{staticClass:\"one-numbers\"},[_c('div',{staticClass:\"shahu-num\"},[_vm._v(\"25\")]),_c('div',{staticClass:\"shahu-msg\"},[_vm._v(\"回播次数\")])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"all-chart\" :style=\"bodySize\">\r\n    <div class=\"left-chart\">\r\n      <div class=\"one-numbers\">\r\n        <div class=\"shahu-num\">200</div>\r\n        <div class=\"shahu-msg\">珊瑚图片总数</div>\r\n      </div>\r\n      <div class=\"one-numbers\">\r\n        <div class=\"shahu-num\">60</div>\r\n        <div class=\"shahu-msg\">珊瑚档案数量</div>\r\n      </div>\r\n      <div class=\"one-numbers\">\r\n        <div class=\"shahu-num\">32</div>\r\n        <div class=\"shahu-msg\">暂养次数</div>\r\n      </div>\r\n      <div class=\"one-numbers\">\r\n        <div class=\"shahu-num\">25</div>\r\n        <div class=\"shahu-msg\">回播次数</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"right-chart\">\r\n      <div class=\"one-chart\" style>\r\n        <v-chart :options=\"polar1\" />\r\n      </div>\r\n      <div class=\"one-chart\" style>\r\n        <v-chart :options=\"polar2\" />\r\n      </div>\r\n\r\n      <div class=\"one-chart\">\r\n        <v-chart :options=\"polar3\" />\r\n      </div>\r\n      <div class=\"one-chart\" style>\r\n        <v-chart :options=\"polar4\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Api from \"../api/api\";\r\nimport { Message, Loading } from \"element-ui\";\r\nimport ECharts from \"vue-echarts\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/component/title\";\r\nimport \"echarts/lib/component/polar\";\r\nimport \"echarts/lib/component/legend\";\r\nimport \"echarts/lib/component/tooltip\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport \"echarts/lib/chart/pie\";\r\n\r\nexport default {\r\n  components: {\r\n    \"v-chart\": ECharts\r\n  },\r\n  name: \"chart\",\r\n  data() {\r\n    let data = [];\r\n\r\n    for (let i = 0; i <= 360; i++) {\r\n      let t = (i / 180) * Math.PI;\r\n      let r = Math.sin(2 * t) * Math.cos(2 * t);\r\n      data.push([r, i]);\r\n    }\r\n  \r\n\r\n    return {\r\n      work_no: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n\r\n      master_dirs: [],\r\n      resource_id: \"\",\r\n      resource_name: \"\",\r\n      //验证 store.js中是否有userInformatio\r\n      hava_infot: false,\r\n\r\n      userLoading: true,\r\n\r\n      group: [],\r\n      bodySize: {\r\n        height: \"\",\r\n        width: \"\"\r\n      },\r\n\r\n      polar1: {\r\n        title: {\r\n          text: \"各区域暂养+回播总数\"\r\n        },\r\n        tooltip: {},\r\n\r\n        grid: {\r\n          left: \"20%\"\r\n        },\r\n        xAxis: {\r\n          data: [\"深圳大鹏\", \"湛江徐闻\"]\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"数量\",\r\n            type: \"bar\",\r\n            data: [57, 46]\r\n          }\r\n        ]\r\n      },\r\n\r\n      polar2: {\r\n        title: {\r\n          text: \"珊瑚档案中的种类\",\r\n          subtext: \"\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n\r\n        series: [\r\n          {\r\n            name: \"\",\r\n            type: \"pie\",\r\n            radius: \"55%\",\r\n            center: [\"50%\", \"60%\"],\r\n            data: [\r\n              { value: 25, name: \"厚板表孔珊瑚\" },\r\n              { value: 13, name: \"隐形角菊珊瑚\" },\r\n              { value: 21, name: \"团状滨珊瑚\" },\r\n              { value: 5, name: \"板叶角菊珊瑚\" },\r\n              { value: 8, name: \"风信子鹿角珊瑚\" },\r\n              { value: 4, name: \"其他种类\" }\r\n            ],\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  formatter: \"{b} :\\r\\n\\r\\n {c} ({d}%)\"\r\n                },\r\n                labelLine: { show: true }\r\n              },\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n\r\n      polar3: {\r\n        title: {\r\n          text: \"各个分区的珊瑚数量\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n        },\r\n        legend: {\r\n          orient: \"horizontal\",\r\n          bottom : \"1\",\r\n          data: [\r\n            \"1区\",\r\n            \"2区\",\r\n            \"3区\",\r\n            \"4区\",\r\n            \"5区\"\r\n          ]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"\",\r\n            type: \"pie\",\r\n            radius: [\"30%\", \"50%\"],\r\n            // avoidLabelOverlap: false,\r\n            // hoverAnimation: false,\r\n            // silent: true,\r\n            // label: {\r\n            //   normal: {\r\n            //     show: true,\r\n            //     position: \"center\",\r\n            //     formatter: function() {\r\n            //       return \"总数：76\";\r\n            //     },\r\n            //     textStyle: {\r\n            //       fontSize: 30,\r\n            //       color: \"#D64728\"\r\n            //     }\r\n            //   },\r\n            //   emphasis: {\r\n            //     show: true,\r\n            //     textStyle: {\r\n            //       fontSize: \"30\",\r\n            //       fontWeight: \"bold\"\r\n            //     }\r\n            //   }\r\n            // },\r\n            labelLine: {\r\n              normal: {\r\n                show: false\r\n              }\r\n            },\r\n            data: [\r\n              { value: 25, name: \"1区\" },\r\n              { value: 13, name: \"2区\" },\r\n              { value: 21, name: \"3区\" },\r\n              { value: 5, name: \"4区\" },\r\n              { value: 8, name: \"5区\" },\r\n            ],\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  formatter: \"{b} :{c} ({d}%)\"\r\n                },\r\n                labelLine: { show: true }\r\n              },\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n\r\n      polar4: {\r\n         title: {\r\n          text: \"珊瑚生长情况\"\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: [\"2019/5/12\", \"2019/5/30\", \"2019/6/15\", \"2019/6/27\", \"2019/7/12\", \"2019/7/22\", \"2019/8/17\"]\r\n        },\r\n        yAxis: {\r\n          type: \"value\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        grid: {\r\n          left: \"20%\"\r\n        },\r\n        series: [\r\n          {\r\n            data: [20, 32, 41, 45, 50, 70, 90],\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  formatter: \"{c}\"\r\n                },\r\n                labelLine: { show: true }\r\n              },\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n              }\r\n            },\r\n            type: \"line\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted: function() {\r\n    let _this = this;\r\n    //从store.js中获取数据\r\n    this.bodySize.height = document.body.clientHeight - 90 + \"px\";\r\n    this.bodySize.width = document.body.clientWidth - 200 + \"px\";\r\n    // console.log(_this.bodySize.height, _this.bodySize.width);\r\n\r\n    // window.addEventListener(\"resize\", function() {\r\n    //   _this.echarts.resize(); //初始化的\r\n    // });\r\n    // let echartsElement = document.getElementsByClassName(\"echarts\");\r\n    // for (let i = 0; i < echartsElement.length; i++) {\r\n    //   echartsElement[i].style.width =\r\n    //     (document.body.clientWidth - 200) * 0.8 * 0.485 + \"px\";\r\n    //   echartsElement[i].style.height =\r\n    //     (document.body.clientHeight - 90) * 0.475 + \"px\";\r\n    // }\r\n  },\r\n  methods: {\r\n    updatePublicMsg() {\r\n      console.log(\"更新信息\");\r\n    },\r\n    goMasterDirs(index) {\r\n      console.log(\"去主目录\", index);\r\n    },\r\n    goUserDirs() {\r\n      console.log(\"去个人目录\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.user-content {\r\n  /* float: right; */\r\n  margin: 5% 0 0 30%;\r\n}\r\n.grid-content {\r\n  float: left;\r\n  width: 50%;\r\n  height: 100%;\r\n}\r\n.all-chart {\r\n  width: 800px;\r\n  height: 600px;\r\n  margin: 60px 0 0 0;\r\n  background-color: rgba(0, 0, 0, 0.08);\r\n  /* border: 1px solid seagreen; */\r\n}\r\n.left-chart {\r\n  height: 100%;\r\n  float: left;\r\n  width: 20%;\r\n  /* border: 1px solid seagreen; */\r\n}\r\n.right-chart {\r\n  width: 80%;\r\n  height: 100%;\r\n  float: right;\r\n  /* border: 1px solid blue; */\r\n}\r\n.echarts {\r\n  width: 420px;\r\n  height: 280px;\r\n  /* margin: 0 auto; */\r\n}\r\ncanvas {\r\n  display: block;\r\n  margin: 0 auto;\r\n  border: 1px solid red;\r\n}\r\n.one-chart {\r\n  float: left;\r\n  margin: 1% 0 0 1%;\r\n  width: 48.5%;\r\n  height: 47.5%;\r\n  background-color: white;\r\n}\r\n.one-numbers {\r\n  /* float: left; */\r\n  margin: 4% 0 0 4%;\r\n  width: 96%;\r\n  height: 23%;\r\n  background-color: white;\r\n}\r\n\r\n.shahu-num {\r\n  font-weight: bold;\r\n  font-size: 5em;\r\n  padding-top: 5%;\r\n}\r\n.shahu-msg {\r\n}\r\n</style>  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chart.vue?vue&type=template&id=389949a0&scoped=true&\"\nimport script from \"./chart.vue?vue&type=script&lang=js&\"\nexport * from \"./chart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chart.vue?vue&type=style&index=0&id=389949a0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"389949a0\",\n  null\n  \n)\n\nexport default component.exports","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=style&index=0&id=389949a0&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=style&index=0&id=389949a0&scoped=true&lang=css&\"","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar Axis = require(\"../Axis\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData,\n\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  }\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  });\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  }\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // right-side\n    ? Number.MAX_VALUE // down\n    : 0 // up\n    : isDownList // left-side\n    ? Number.MAX_VALUE // down\n    : 0; // up\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // right-down, left-down\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // right-up, left-up\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction isPositionCenter(layout) {\n  // Not change x for center label\n  return layout.position === 'center';\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;"],"sourceRoot":""}